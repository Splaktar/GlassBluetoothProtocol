// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.google.googlex.glass.common.proto;

@SuppressWarnings("hiding")
public interface TimelineNano {
  
  public static final class TimelineItem extends
      com.google.protobuf.nano.MessageNano {
    
    public static final TimelineItem[] EMPTY_ARRAY = {};
    
    public TimelineItem() {
      clear();
    }
    
    // optional string id = 1;
    public java.lang.String id;
    
    // optional uint64 creationTime = 2;
    public java.lang.Long creationTime;
    
    // optional uint64 modifiedTime = 3;
    public java.lang.Long modifiedTime;
    
    // optional string source = 4;
    public java.lang.String source;
    
    // optional .TimelineNano.Entity creator = 5;
    public com.google.googlex.glass.common.proto.TimelineNano.Entity creator;
    
    // repeated .TimelineNano.Entity arrayOfEntity = 6;
    public com.google.googlex.glass.common.proto.TimelineNano.Entity[] arrayOfEntity;
    
    // optional string inReplyTo = 7;
    public java.lang.String inReplyTo;
    
    // optional string text = 8;
    public java.lang.String text;
    
    public TimelineItem clear() {
      id = null;
      creationTime = null;
      modifiedTime = null;
      source = null;
      creator = null;
      arrayOfEntity = com.google.googlex.glass.common.proto.TimelineNano.Entity.EMPTY_ARRAY;
      inReplyTo = null;
      text = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof TimelineItem)) {
        return false;
      }
      TimelineItem other = (TimelineItem) o;
      if (this.id == null) {
        if (other.id != null) {
          return false;
        }
      } else if (!this.id.equals(other.id)) {
        return false;
      }
      if (this.creationTime == null) {
        if (other.creationTime != null) {
          return false;
        }
      } else if (!this.creationTime.equals(other.creationTime)) {
        return false;
      }
      if (this.modifiedTime == null) {
        if (other.modifiedTime != null) {
          return false;
        }
      } else if (!this.modifiedTime.equals(other.modifiedTime)) {
        return false;
      }
      if (this.source == null) {
        if (other.source != null) {
          return false;
        }
      } else if (!this.source.equals(other.source)) {
        return false;
      }
      if (this.creator == null) { 
        if (other.creator != null) {
          return false;
        }
      } else {
        if (!this.creator.equals(other.creator)) {
          return false;
        }
      }
      if (!com.google.protobuf.nano.InternalNano.equals(
          this.arrayOfEntity, other.arrayOfEntity)) {
        return false;
      }
      if (this.inReplyTo == null) {
        if (other.inReplyTo != null) {
          return false;
        }
      } else if (!this.inReplyTo.equals(other.inReplyTo)) {
        return false;
      }
      if (this.text == null) {
        if (other.text != null) {
          return false;
        }
      } else if (!this.text.equals(other.text)) {
        return false;
      }
      return true;
    }
    
    @Override
    public int hashCode() {
      int result = 17;
      result = 31 * result
          + (this.id == null ? 0 : this.id.hashCode());
      result = 31 * result
          + (this.creationTime == null ? 0 : this.creationTime.hashCode());
      result = 31 * result
          + (this.modifiedTime == null ? 0 : this.modifiedTime.hashCode());
      result = 31 * result
          + (this.source == null ? 0 : this.source.hashCode());
      result = 31 * result +
          (this.creator == null ? 0 : this.creator.hashCode());
      result = 31 * result
          + com.google.protobuf.nano.InternalNano.hashCode(this.arrayOfEntity);
      result = 31 * result
          + (this.inReplyTo == null ? 0 : this.inReplyTo.hashCode());
      result = 31 * result
          + (this.text == null ? 0 : this.text.hashCode());
      return result;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != null) {
        output.writeString(1, this.id);
      }
      if (this.creationTime != null) {
        output.writeUInt64(2, this.creationTime);
      }
      if (this.modifiedTime != null) {
        output.writeUInt64(3, this.modifiedTime);
      }
      if (this.source != null) {
        output.writeString(4, this.source);
      }
      if (this.creator != null) {
        output.writeMessage(5, this.creator);
      }
      if (this.arrayOfEntity != null && this.arrayOfEntity.length > 0) {
        for (int i = 0; i < this.arrayOfEntity.length; i++) {
          com.google.googlex.glass.common.proto.TimelineNano.Entity element = this.arrayOfEntity[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      if (this.inReplyTo != null) {
        output.writeString(7, this.inReplyTo);
      }
      if (this.text != null) {
        output.writeString(8, this.text);
      }
    }
    
    @Override
    public int getSerializedSize() {
      int size = super.getSerializedSize();
      if (this.id != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
      }
      if (this.creationTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(2, this.creationTime);
      }
      if (this.modifiedTime != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(3, this.modifiedTime);
      }
      if (this.source != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.source);
      }
      if (this.creator != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.creator);
      }
      if (this.arrayOfEntity != null && this.arrayOfEntity.length > 0) {
        for (int i = 0; i < this.arrayOfEntity.length; i++) {
          com.google.googlex.glass.common.proto.TimelineNano.Entity element = this.arrayOfEntity[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      if (this.inReplyTo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.inReplyTo);
      }
      if (this.text != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.text);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public TimelineItem mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 16: {
            this.creationTime = input.readUInt64();
            break;
          }
          case 24: {
            this.modifiedTime = input.readUInt64();
            break;
          }
          case 34: {
            this.source = input.readString();
            break;
          }
          case 42: {
            if (this.creator == null) {
              this.creator = new com.google.googlex.glass.common.proto.TimelineNano.Entity();
            }
            input.readMessage(this.creator);
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.arrayOfEntity == null ? 0 : this.arrayOfEntity.length;
            com.google.googlex.glass.common.proto.TimelineNano.Entity[] newArray =
                new com.google.googlex.glass.common.proto.TimelineNano.Entity[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.arrayOfEntity, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.googlex.glass.common.proto.TimelineNano.Entity();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.googlex.glass.common.proto.TimelineNano.Entity();
            input.readMessage(newArray[i]);
            this.arrayOfEntity = newArray;
            break;
          }
          case 58: {
            this.inReplyTo = input.readString();
            break;
          }
          case 66: {
            this.text = input.readString();
            break;
          }
        }
      }
    }
    
    public static TimelineItem parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TimelineItem(), data);
    }
    
    public static TimelineItem parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TimelineItem().mergeFrom(input);
    }
  }
  
  public static final class Entity extends
      com.google.protobuf.nano.MessageNano {
    
    public static final Entity[] EMPTY_ARRAY = {};
    
    public Entity() {
      clear();
    }
    
    // optional string source = 1;
    public java.lang.String source;
    
    // optional string id = 2;
    public java.lang.String id;
    
    // optional string displayName = 3;
    public java.lang.String displayName;
    
    // optional bool shouldSync = 5;
    public java.lang.Boolean shouldSync;
    
    // optional int32 type = 6;
    public java.lang.Integer type;
    
    // optional string phoneNumber = 7;
    public java.lang.String phoneNumber;
    
    // optional string email = 8;
    public java.lang.String email;
    
    public Entity clear() {
      source = null;
      id = null;
      displayName = null;
      shouldSync = null;
      type = null;
      phoneNumber = null;
      email = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof Entity)) {
        return false;
      }
      Entity other = (Entity) o;
      if (this.source == null) {
        if (other.source != null) {
          return false;
        }
      } else if (!this.source.equals(other.source)) {
        return false;
      }
      if (this.id == null) {
        if (other.id != null) {
          return false;
        }
      } else if (!this.id.equals(other.id)) {
        return false;
      }
      if (this.displayName == null) {
        if (other.displayName != null) {
          return false;
        }
      } else if (!this.displayName.equals(other.displayName)) {
        return false;
      }
      if (this.shouldSync == null) {
        if (other.shouldSync != null) {
          return false;
        }
      } else if (!this.shouldSync.equals(other.shouldSync)) {
        return false;
      }
      if (this.type == null) {
        if (other.type != null) {
          return false;
        }
      } else if (!this.type.equals(other.type)) {
        return false;
      }
      if (this.phoneNumber == null) {
        if (other.phoneNumber != null) {
          return false;
        }
      } else if (!this.phoneNumber.equals(other.phoneNumber)) {
        return false;
      }
      if (this.email == null) {
        if (other.email != null) {
          return false;
        }
      } else if (!this.email.equals(other.email)) {
        return false;
      }
      return true;
    }
    
    @Override
    public int hashCode() {
      int result = 17;
      result = 31 * result
          + (this.source == null ? 0 : this.source.hashCode());
      result = 31 * result
          + (this.id == null ? 0 : this.id.hashCode());
      result = 31 * result
          + (this.displayName == null ? 0 : this.displayName.hashCode());
      result = 31 * result
          + (this.shouldSync == null ? 0 : this.shouldSync.hashCode());
      result = 31 * result
          + (this.type == null ? 0 : this.type.hashCode());
      result = 31 * result
          + (this.phoneNumber == null ? 0 : this.phoneNumber.hashCode());
      result = 31 * result
          + (this.email == null ? 0 : this.email.hashCode());
      return result;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.source != null) {
        output.writeString(1, this.source);
      }
      if (this.id != null) {
        output.writeString(2, this.id);
      }
      if (this.displayName != null) {
        output.writeString(3, this.displayName);
      }
      if (this.shouldSync != null) {
        output.writeBool(5, this.shouldSync);
      }
      if (this.type != null) {
        output.writeInt32(6, this.type);
      }
      if (this.phoneNumber != null) {
        output.writeString(7, this.phoneNumber);
      }
      if (this.email != null) {
        output.writeString(8, this.email);
      }
    }
    
    @Override
    public int getSerializedSize() {
      int size = super.getSerializedSize();
      if (this.source != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.source);
      }
      if (this.id != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.id);
      }
      if (this.displayName != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.displayName);
      }
      if (this.shouldSync != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(5, this.shouldSync);
      }
      if (this.type != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(6, this.type);
      }
      if (this.phoneNumber != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.phoneNumber);
      }
      if (this.email != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.email);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public Entity mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.source = input.readString();
            break;
          }
          case 18: {
            this.id = input.readString();
            break;
          }
          case 26: {
            this.displayName = input.readString();
            break;
          }
          case 40: {
            this.shouldSync = input.readBool();
            break;
          }
          case 48: {
            this.type = input.readInt32();
            break;
          }
          case 58: {
            this.phoneNumber = input.readString();
            break;
          }
          case 66: {
            this.email = input.readString();
            break;
          }
        }
      }
    }
    
    public static Entity parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Entity(), data);
    }
    
    public static Entity parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Entity().mergeFrom(input);
    }
  }
}
