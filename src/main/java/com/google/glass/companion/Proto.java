// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.google.glass.companion;

@SuppressWarnings("hiding")
public interface Proto {
  
  public static final class Envelope extends
      com.google.protobuf.nano.MessageNano {
    
    public static final Envelope[] EMPTY_ARRAY = {};
    
    public Envelope() {
      clear();
    }
    
    // required uint32 version = 1;
    public java.lang.Integer version;
    
    // optional uint32 serialNumber = 2;
    public java.lang.Integer serialNumber;
    
    // optional uint64 timeMillis = 3;
    public java.lang.Long timeMillis;
    
    // optional uint64 uptimeMillis = 4;
    public java.lang.Long uptimeMillis;
    
    // repeated .TimelineNano.TimelineItem timelineItem = 5;
    public com.google.googlex.glass.common.proto.TimelineNano.TimelineItem[] timelineItem;
    
    // optional string timezoneC2G = 9;
    public java.lang.String timezoneC2G;
    
    // optional string urlG2C = 11;
    public java.lang.String urlG2C;
    
    // optional .Proto.Error error = 14;
    public com.google.glass.companion.Proto.Error error;
    
    // optional .Proto.ScreenShot screenshot = 15;
    public com.google.glass.companion.Proto.ScreenShot screenshot;
    
    // optional .Proto.Command command = 16;
    public com.google.glass.companion.Proto.Command command;
    
    // repeated .Proto.TimelineItemResponse timelineItemResponseC2G = 17;
    public com.google.glass.companion.Proto.TimelineItemResponse[] timelineItemResponseC2G;
    
    public Envelope clear() {
      version = null;
      serialNumber = null;
      timeMillis = null;
      uptimeMillis = null;
      timelineItem = com.google.googlex.glass.common.proto.TimelineNano.TimelineItem.EMPTY_ARRAY;
      timezoneC2G = null;
      urlG2C = null;
      error = null;
      screenshot = null;
      command = null;
      timelineItemResponseC2G = com.google.glass.companion.Proto.TimelineItemResponse.EMPTY_ARRAY;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof Envelope)) {
        return false;
      }
      Envelope other = (Envelope) o;
      if (this.version == null) {
        if (other.version != null) {
          return false;
        }
      } else if (!this.version.equals(other.version)) {
        return false;
      }
      if (this.serialNumber == null) {
        if (other.serialNumber != null) {
          return false;
        }
      } else if (!this.serialNumber.equals(other.serialNumber)) {
        return false;
      }
      if (this.timeMillis == null) {
        if (other.timeMillis != null) {
          return false;
        }
      } else if (!this.timeMillis.equals(other.timeMillis)) {
        return false;
      }
      if (this.uptimeMillis == null) {
        if (other.uptimeMillis != null) {
          return false;
        }
      } else if (!this.uptimeMillis.equals(other.uptimeMillis)) {
        return false;
      }
      if (!com.google.protobuf.nano.InternalNano.equals(
          this.timelineItem, other.timelineItem)) {
        return false;
      }
      if (this.timezoneC2G == null) {
        if (other.timezoneC2G != null) {
          return false;
        }
      } else if (!this.timezoneC2G.equals(other.timezoneC2G)) {
        return false;
      }
      if (this.urlG2C == null) {
        if (other.urlG2C != null) {
          return false;
        }
      } else if (!this.urlG2C.equals(other.urlG2C)) {
        return false;
      }
      if (this.error == null) { 
        if (other.error != null) {
          return false;
        }
      } else {
        if (!this.error.equals(other.error)) {
          return false;
        }
      }
      if (this.screenshot == null) { 
        if (other.screenshot != null) {
          return false;
        }
      } else {
        if (!this.screenshot.equals(other.screenshot)) {
          return false;
        }
      }
      if (this.command == null) { 
        if (other.command != null) {
          return false;
        }
      } else {
        if (!this.command.equals(other.command)) {
          return false;
        }
      }
      if (!com.google.protobuf.nano.InternalNano.equals(
          this.timelineItemResponseC2G, other.timelineItemResponseC2G)) {
        return false;
      }
      return true;
    }
    
    @Override
    public int hashCode() {
      int result = 17;
      result = 31 * result
          + (this.version == null ? 0 : this.version.hashCode());
      result = 31 * result
          + (this.serialNumber == null ? 0 : this.serialNumber.hashCode());
      result = 31 * result
          + (this.timeMillis == null ? 0 : this.timeMillis.hashCode());
      result = 31 * result
          + (this.uptimeMillis == null ? 0 : this.uptimeMillis.hashCode());
      result = 31 * result
          + com.google.protobuf.nano.InternalNano.hashCode(this.timelineItem);
      result = 31 * result
          + (this.timezoneC2G == null ? 0 : this.timezoneC2G.hashCode());
      result = 31 * result
          + (this.urlG2C == null ? 0 : this.urlG2C.hashCode());
      result = 31 * result +
          (this.error == null ? 0 : this.error.hashCode());
      result = 31 * result +
          (this.screenshot == null ? 0 : this.screenshot.hashCode());
      result = 31 * result +
          (this.command == null ? 0 : this.command.hashCode());
      result = 31 * result
          + com.google.protobuf.nano.InternalNano.hashCode(this.timelineItemResponseC2G);
      return result;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt32(1, this.version);
      if (this.serialNumber != null) {
        output.writeUInt32(2, this.serialNumber);
      }
      if (this.timeMillis != null) {
        output.writeUInt64(3, this.timeMillis);
      }
      if (this.uptimeMillis != null) {
        output.writeUInt64(4, this.uptimeMillis);
      }
      if (this.timelineItem != null && this.timelineItem.length > 0) {
        for (int i = 0; i < this.timelineItem.length; i++) {
          com.google.googlex.glass.common.proto.TimelineNano.TimelineItem element = this.timelineItem[i];
          if (element != null) {
            output.writeMessage(5, element);
          }
        }
      }
      if (this.timezoneC2G != null) {
        output.writeString(9, this.timezoneC2G);
      }
      if (this.urlG2C != null) {
        output.writeString(11, this.urlG2C);
      }
      if (this.error != null) {
        output.writeMessage(14, this.error);
      }
      if (this.screenshot != null) {
        output.writeMessage(15, this.screenshot);
      }
      if (this.command != null) {
        output.writeMessage(16, this.command);
      }
      if (this.timelineItemResponseC2G != null && this.timelineItemResponseC2G.length > 0) {
        for (int i = 0; i < this.timelineItemResponseC2G.length; i++) {
          com.google.glass.companion.Proto.TimelineItemResponse element = this.timelineItemResponseC2G[i];
          if (element != null) {
            output.writeMessage(17, element);
          }
        }
      }
    }
    
    @Override
    public int getSerializedSize() {
      int size = super.getSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(1, this.version);
      if (this.serialNumber != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.serialNumber);
      }
      if (this.timeMillis != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(3, this.timeMillis);
      }
      if (this.uptimeMillis != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(4, this.uptimeMillis);
      }
      if (this.timelineItem != null && this.timelineItem.length > 0) {
        for (int i = 0; i < this.timelineItem.length; i++) {
          com.google.googlex.glass.common.proto.TimelineNano.TimelineItem element = this.timelineItem[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(5, element);
          }
        }
      }
      if (this.timezoneC2G != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.timezoneC2G);
      }
      if (this.urlG2C != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.urlG2C);
      }
      if (this.error != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(14, this.error);
      }
      if (this.screenshot != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(15, this.screenshot);
      }
      if (this.command != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(16, this.command);
      }
      if (this.timelineItemResponseC2G != null && this.timelineItemResponseC2G.length > 0) {
        for (int i = 0; i < this.timelineItemResponseC2G.length; i++) {
          com.google.glass.companion.Proto.TimelineItemResponse element = this.timelineItemResponseC2G[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(17, element);
          }
        }
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public Envelope mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.version = input.readUInt32();
            break;
          }
          case 16: {
            this.serialNumber = input.readUInt32();
            break;
          }
          case 24: {
            this.timeMillis = input.readUInt64();
            break;
          }
          case 32: {
            this.uptimeMillis = input.readUInt64();
            break;
          }
          case 42: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 42);
            int i = this.timelineItem == null ? 0 : this.timelineItem.length;
            com.google.googlex.glass.common.proto.TimelineNano.TimelineItem[] newArray =
                new com.google.googlex.glass.common.proto.TimelineNano.TimelineItem[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.timelineItem, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.googlex.glass.common.proto.TimelineNano.TimelineItem();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.googlex.glass.common.proto.TimelineNano.TimelineItem();
            input.readMessage(newArray[i]);
            this.timelineItem = newArray;
            break;
          }
          case 74: {
            this.timezoneC2G = input.readString();
            break;
          }
          case 90: {
            this.urlG2C = input.readString();
            break;
          }
          case 114: {
            if (this.error == null) {
              this.error = new com.google.glass.companion.Proto.Error();
            }
            input.readMessage(this.error);
            break;
          }
          case 122: {
            if (this.screenshot == null) {
              this.screenshot = new com.google.glass.companion.Proto.ScreenShot();
            }
            input.readMessage(this.screenshot);
            break;
          }
          case 130: {
            if (this.command == null) {
              this.command = new com.google.glass.companion.Proto.Command();
            }
            input.readMessage(this.command);
            break;
          }
          case 138: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 138);
            int i = this.timelineItemResponseC2G == null ? 0 : this.timelineItemResponseC2G.length;
            com.google.glass.companion.Proto.TimelineItemResponse[] newArray =
                new com.google.glass.companion.Proto.TimelineItemResponse[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.timelineItemResponseC2G, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.glass.companion.Proto.TimelineItemResponse();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.glass.companion.Proto.TimelineItemResponse();
            input.readMessage(newArray[i]);
            this.timelineItemResponseC2G = newArray;
            break;
          }
        }
      }
    }
    
    public static Envelope parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Envelope(), data);
    }
    
    public static Envelope parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Envelope().mergeFrom(input);
    }
  }
  
  public static final class ScreenShot extends
      com.google.protobuf.nano.MessageNano {
    
    public static final ScreenShot[] EMPTY_ARRAY = {};
    
    public ScreenShot() {
      clear();
    }
    
    // optional bool startScreenshotRequestC2G = 1;
    public java.lang.Boolean startScreenshotRequestC2G;
    
    // optional bool stopScreenshotRequestC2G = 2;
    public java.lang.Boolean stopScreenshotRequestC2G;
    
    // optional bytes screenshotBytesG2C = 3;
    public byte[] screenshotBytesG2C;
    
    public ScreenShot clear() {
      startScreenshotRequestC2G = null;
      stopScreenshotRequestC2G = null;
      screenshotBytesG2C = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ScreenShot)) {
        return false;
      }
      ScreenShot other = (ScreenShot) o;
      if (this.startScreenshotRequestC2G == null) {
        if (other.startScreenshotRequestC2G != null) {
          return false;
        }
      } else if (!this.startScreenshotRequestC2G.equals(other.startScreenshotRequestC2G)) {
        return false;
      }
      if (this.stopScreenshotRequestC2G == null) {
        if (other.stopScreenshotRequestC2G != null) {
          return false;
        }
      } else if (!this.stopScreenshotRequestC2G.equals(other.stopScreenshotRequestC2G)) {
        return false;
      }
      if (!java.util.Arrays.equals(this.screenshotBytesG2C, other.screenshotBytesG2C)) {
        return false;
      }
      return true;
    }
    
    @Override
    public int hashCode() {
      int result = 17;
      result = 31 * result
          + (this.startScreenshotRequestC2G == null ? 0 : this.startScreenshotRequestC2G.hashCode());
      result = 31 * result
          + (this.stopScreenshotRequestC2G == null ? 0 : this.stopScreenshotRequestC2G.hashCode());
      result = 31 * result + java.util.Arrays.hashCode(this.screenshotBytesG2C);
      return result;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.startScreenshotRequestC2G != null) {
        output.writeBool(1, this.startScreenshotRequestC2G);
      }
      if (this.stopScreenshotRequestC2G != null) {
        output.writeBool(2, this.stopScreenshotRequestC2G);
      }
      if (this.screenshotBytesG2C != null) {
        output.writeBytes(3, this.screenshotBytesG2C);
      }
    }
    
    @Override
    public int getSerializedSize() {
      int size = super.getSerializedSize();
      if (this.startScreenshotRequestC2G != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.startScreenshotRequestC2G);
      }
      if (this.stopScreenshotRequestC2G != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.stopScreenshotRequestC2G);
      }
      if (this.screenshotBytesG2C != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.screenshotBytesG2C);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public ScreenShot mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.startScreenshotRequestC2G = input.readBool();
            break;
          }
          case 16: {
            this.stopScreenshotRequestC2G = input.readBool();
            break;
          }
          case 26: {
            this.screenshotBytesG2C = input.readBytes();
            break;
          }
        }
      }
    }
    
    public static ScreenShot parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ScreenShot(), data);
    }
    
    public static ScreenShot parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ScreenShot().mergeFrom(input);
    }
  }
  
  public static final class Error extends
      com.google.protobuf.nano.MessageNano {
    
    public static final Error[] EMPTY_ARRAY = {};
    
    public Error() {
      clear();
    }
    
    // enum ErrorType
    public interface ErrorType {
      public static final int TETHERING_ERROR_ON_GLASS = 0;
      public static final int SMS_GOOGLE_VOICE_NOT_INSTALLED = 1;
      public static final int SMS_GOOGLE_VOICE_NEEDS_UPDATE = 2;
    }
    
    // required .Proto.Error.ErrorType type = 1;
    public java.lang.Integer type;
    
    public Error clear() {
      type = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof Error)) {
        return false;
      }
      Error other = (Error) o;
      if (this.type == null) {
        if (other.type != null) {
          return false;
        }
      } else if (!this.type.equals(other.type)) {
        return false;}
      return true;
    }
    
    @Override
    public int hashCode() {
      int result = 17;
      result = 31 * result + (this.type == null ? 0 : this.type);
      return result;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.type);
    }
    
    @Override
    public int getSerializedSize() {
      int size = super.getSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.type);
      cachedSize = size;
      return size;
    }
    
    @Override
    public Error mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.type = input.readInt32();
            break;
          }
        }
      }
    }
    
    public static Error parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Error(), data);
    }
    
    public static Error parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Error().mergeFrom(input);
    }
  }
  
  public static final class Command extends
      com.google.protobuf.nano.MessageNano {
    
    public static final Command[] EMPTY_ARRAY = {};
    
    public Command() {
      clear();
    }
    
    // enum CommandType
    public interface CommandType {
      public static final int UNPAIR = 0;
      public static final int START_DEBUG = 1;
      public static final int STOP_DEBUG = 2;
    }
    
    // required .Proto.Command.CommandType command = 1;
    public java.lang.Integer command;
    
    public Command clear() {
      command = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof Command)) {
        return false;
      }
      Command other = (Command) o;
      if (this.command == null) {
        if (other.command != null) {
          return false;
        }
      } else if (!this.command.equals(other.command)) {
        return false;}
      return true;
    }
    
    @Override
    public int hashCode() {
      int result = 17;
      result = 31 * result + (this.command == null ? 0 : this.command);
      return result;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.command);
    }
    
    @Override
    public int getSerializedSize() {
      int size = super.getSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.command);
      cachedSize = size;
      return size;
    }
    
    @Override
    public Command mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.command = input.readInt32();
            break;
          }
        }
      }
    }
    
    public static Command parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Command(), data);
    }
    
    public static Command parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Command().mergeFrom(input);
    }
  }
  
  public static final class TimelineItemResponse extends
      com.google.protobuf.nano.MessageNano {
    
    public static final TimelineItemResponse[] EMPTY_ARRAY = {};
    
    public TimelineItemResponse() {
      clear();
    }
    
    // optional string id = 1;
    public java.lang.String id;
    
    // optional int32 syncStatus = 2;
    public java.lang.Integer syncStatus;
    
    public TimelineItemResponse clear() {
      id = null;
      syncStatus = null;
      cachedSize = -1;
      return this;
    }
    
    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof TimelineItemResponse)) {
        return false;
      }
      TimelineItemResponse other = (TimelineItemResponse) o;
      if (this.id == null) {
        if (other.id != null) {
          return false;
        }
      } else if (!this.id.equals(other.id)) {
        return false;
      }
      if (this.syncStatus == null) {
        if (other.syncStatus != null) {
          return false;
        }
      } else if (!this.syncStatus.equals(other.syncStatus)) {
        return false;
      }
      return true;
    }
    
    @Override
    public int hashCode() {
      int result = 17;
      result = 31 * result
          + (this.id == null ? 0 : this.id.hashCode());
      result = 31 * result
          + (this.syncStatus == null ? 0 : this.syncStatus.hashCode());
      return result;
    }
    
    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != null) {
        output.writeString(1, this.id);
      }
      if (this.syncStatus != null) {
        output.writeInt32(2, this.syncStatus);
      }
    }
    
    @Override
    public int getSerializedSize() {
      int size = super.getSerializedSize();
      if (this.id != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
      }
      if (this.syncStatus != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.syncStatus);
      }
      cachedSize = size;
      return size;
    }
    
    @Override
    public TimelineItemResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 16: {
            this.syncStatus = input.readInt32();
            break;
          }
        }
      }
    }
    
    public static TimelineItemResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TimelineItemResponse(), data);
    }
    
    public static TimelineItemResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TimelineItemResponse().mergeFrom(input);
    }
  }
}
